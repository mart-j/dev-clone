{"version":3,"sources":["components/postList/PostList.module.scss","components/registerForm/RegisterForm.module.scss","components/loginForm/LoginForm.module.scss","components/authOptions/AuthOptions.module.scss","components/button/Button.module.scss","components/logo/Logo.module.scss","components/header/Header.module.scss","components/input/Input.module.scss","components/label/Label.module.scss","components/button/Button.tsx","store/user/types.ts","store/user/reducer.ts","store/user/actions.ts","components/authOptions/AuthOptions.tsx","components/logo/Logo.tsx","components/header/Header.tsx","api/index.ts","store/posts/types.ts","store/posts/actions.ts","components/postList/PostList.tsx","pages/Home.tsx","components/form/Form.tsx","components/input/Input.tsx","components/label/Label.tsx","components/loginForm/LoginForm.tsx","pages/Login.tsx","components/registerForm/RegisterForm.tsx","pages/Register.tsx","App.tsx","reportWebVitals.ts","store/user/index.ts","store/posts/reducer.ts","store/posts/index.ts","store/index.ts","index.tsx"],"names":["module","exports","Button","label","type","priority","clickHandler","className","styles","onClick","FETCH_USER","initialStore","token","user","email","_id","fetchUser","currentUser","payload","AuthOptins","userToken","useSelector","store","history","useHistory","dispatch","useDispatch","authOptions","initialUser","localStorage","push","buttonWrapper","Logo","logo","Header","header","middle","xs","url","HEADERS","headers","likePost","id","axios","patch","FETCH_POSTS","LIKE_POST","fetchPostsAction","a","get","data","likePostAction","userId","api","PostList","posts","sort","b","Date","date","valueOf","userID","map","post","i","author","moment","format","title","tagWrapper","tags","tag","j","likeButton","heartIcon","icon","faHeart","likes","length","likeCount","Home","mdOffset","md","Form","submitHandler","children","form","useRef","autoComplete","onSubmit","e","preventDefault","current","reset","ref","Input","required","value","changeHandler","onChange","target","input","Label","htmlFor","content","LoginForm","useState","errorMessage","setErrorMessage","password","loginDetails","setLoginDetails","loginHandler","response","message","setTimeout","formContentWrapper","error","labelContentWrapper","Login","RegisterForm","passwordCheck","registerHandler","Register","App","location","useLocation","useEffect","checkCurrentUser","path","pathname","authToken","tokenResponse","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","userReducer","state","action","postReducer","newState","includes","filter","rootReducer","combineReducers","createStore","RootStore","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.d29db19e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"PostList_post__2oId6\",\"author\":\"PostList_author__1QHFg\",\"date\":\"PostList_date__18l2n\",\"likeButton\":\"PostList_likeButton__3P3iE\",\"heartIcon\":\"PostList_heartIcon__5GmYw\",\"tagWrapper\":\"PostList_tagWrapper__2oRkY\",\"tag\":\"PostList_tag__3HPQR\",\"likeCount\":\"PostList_likeCount__3bWyV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContentWrapper\":\"RegisterForm_formContentWrapper__2f5c6\",\"labelContentWrapper\":\"RegisterForm_labelContentWrapper__UkuVM\",\"buttonWrapper\":\"RegisterForm_buttonWrapper__3wO0c\",\"error\":\"RegisterForm_error__3fIXD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContentWrapper\":\"LoginForm_formContentWrapper__2WC-G\",\"labelContentWrapper\":\"LoginForm_labelContentWrapper__FAccU\",\"buttonWrapper\":\"LoginForm_buttonWrapper__pm9Is\",\"error\":\"LoginForm_error__27l_v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authOptions\":\"AuthOptions_authOptions__2wbAe\",\"buttonWrapper\":\"AuthOptions_buttonWrapper__1RQ67\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__Nfhxt\",\"buttonSecondary\":\"Button_buttonSecondary__o2_zx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__1XOJC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1fCsm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__25eHb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Label_label__dETEq\"};","import React, { FC } from 'react';\nimport styles from './Button.module.scss';\n\ninterface Props {\n  label?: string;\n  type?: 'button' | 'submit';\n  clickHandler?: () => void;\n  priority?: 'button' | 'buttonSecondary';\n}\n\nconst Button: FC<Props> = ({\n  label = 'Submit',\n  type = 'button',\n  priority = 'button',\n  clickHandler,\n}) => {\n  return (\n    <button className={styles[priority]} onClick={clickHandler} type={type}>\n      {label}\n    </button>\n  );\n};\n\nexport default Button;\n","export const FETCH_USER = 'FETCH_USER';\n\nexport interface FetchUser {\n  type: typeof FETCH_USER;\n  payload: CurrentUser;\n}\n\nexport type AllActions = FetchUser;\n\nexport type CurrentUser = {\n  token: string;\n  user: {\n    _id: string;\n    email: string;\n  };\n};\n","/* eslint-disable no-underscore-dangle */\nimport { AllActions, CurrentUser, FETCH_USER } from './types';\n\nexport const initialStore: CurrentUser  = {\n  token: '',\n  user: { email: '', _id: '' },\n};\n\nexport const userReducer = (state = initialStore, action: AllActions) => {\n  switch (action.type) {\n    case FETCH_USER: {\n      return action.payload;\n    }\n\n    default:\n      return state;\n  }\n};\n","import { Dispatch } from 'redux';\n// import * as api from '../../api';\nimport { CurrentUser, FETCH_USER } from './types';\n\nexport const fetchUser = (currentUser: CurrentUser) => {\n  return {\n    type: FETCH_USER,\n    payload: currentUser,\n  };\n};\n","import React, { FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { RootState } from '../../store';\nimport Button from '../button/Button';\nimport styles from './AuthOptions.module.scss';\nimport { initialStore as initialUser } from '../../store/user/reducer';\nimport { fetchUser } from '../../store/user/actions';\n\nconst AuthOptins: FC = () => {\n  const userToken = useSelector((store: RootState) => store.user.token);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const logoutHandler = () => {\n    dispatch(fetchUser(initialUser));\n    localStorage['x-auth-token'] = '';\n    history.push('/login');\n  };\n  return (\n    <div className={styles.authOptions}>\n      {userToken ? (\n        <Button clickHandler={logoutHandler} label=\"Sign out\" />\n      ) : (\n        <>\n          <div className={styles.buttonWrapper}>\n            <Button\n              clickHandler={() => history.push('/login')}\n              priority=\"buttonSecondary\"\n              label=\"Sign in\"\n            />\n          </div>\n          <div className={styles.buttonWrapper}>\n            <Button\n              clickHandler={() => history.push('/register')}\n              label=\"Create account\"\n            />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default AuthOptins;\n","import React, { FC } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styles from './Logo.module.scss';\n\nconst Logo: FC = () => {\n  const history = useHistory();\n  return (\n    <div onClick={() => history.push('/')} className={styles.logo}>\n      MART\n    </div>\n  );\n};\n\nexport default Logo;\n","import React, { FC } from 'react';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport AuthOptins from '../authOptions/AuthOptions';\nimport Logo from '../logo/Logo';\nimport styles from './Header.module.scss';\n\nconst Header: FC = () => {\n  return (\n    <header className={styles.header}>\n      <Grid>\n        <Row middle='xs'>\n          <Col xs={6}>\n            <Logo />\n          </Col>\n          <Col xs={6}>\n            <AuthOptins />\n          </Col>\n        </Row>\n      </Grid>\n    </header>\n  );\n};\n\nexport default Header;\n","import axios from 'axios';\n\nconst url = 'https://dev-clone.herokuapp.com/';\nconst HEADERS = {\n  headers: { 'x-auth-token': localStorage['x-auth-token'] },\n};\n\nexport const fetchPosts = () => {\n  return axios.get(`${url}posts/all`, HEADERS);\n};\n\nexport const likePost = (id: string, token: string) => {\n  return axios.patch(`${url}posts/like/${id}`, null, {\n    headers: { 'x-auth-token': token },\n  });\n};\n","export const FETCH_POSTS = 'FETCH_POSTS';\nexport const LIKE_POST = 'LIKE_POST';\n\nexport interface FetchUser {\n  type: typeof FETCH_POSTS;\n  payload: Post[];\n}\n\nexport interface LikePost {\n  type: typeof LIKE_POST;\n  id: string;\n  userId: string;\n}\n\nexport type AllActions = FetchUser | LikePost;\n\nexport type Post = {\n  _id: string;\n  tags: string[];\n  title: string;\n  body: string;\n  image: string;\n  userId: string;\n  email: string;\n  date: Date;\n  likes: string[];\n};\n","import { Dispatch } from 'redux';\nimport * as api from '../../api';\nimport { Post, FETCH_POSTS, LIKE_POST } from './types';\n\nexport const fetchPostsAction = async (dispatch: Dispatch) => {\n  const { data }: { data: Post[] } = await api.fetchPosts();\n\n  return dispatch({ type: FETCH_POSTS, payload: data });\n};\n\nexport const likePostAction = async (\n  dispatch: Dispatch,\n  id: string,\n  userId: string,\n  token: string,\n) => {\n  await api.likePost(id, token);\n\n  return dispatch({ type: LIKE_POST, id, userId });\n};\n","/* eslint-disable no-underscore-dangle */\nimport moment from 'moment';\nimport React, { FC } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { RootState } from '../../store';\nimport styles from './PostList.module.scss';\nimport { likePostAction } from '../../store/posts/actions';\n\nconst PostList: FC = () => {\n  const { posts, userID, token } = useSelector((store: RootState) => {\n    return {\n      posts: store.posts.sort((a, b) => {\n        return new Date(b.date).valueOf() - new Date(a.date).valueOf();\n      }),\n      userID: store.user.user._id,\n      token: store.user.token,\n    };\n  });\n  const dispatch = useDispatch();\n  const likeHandler = (id: string) => {\n    if (userID) {\n      likePostAction(dispatch, id, userID, token);\n    }\n  };\n\n  return (\n    <div>\n      {posts.map((post, i) => {\n        return (\n          <div key={post._id} className={styles.post}>\n            <div className={styles.author}>{post.email}</div>\n            <div className={styles.date}>\n              {moment(post.date).format('MMM Do YY')}\n            </div>\n\n            <h1>{post.title}</h1>\n            <div className={styles.tagWrapper}>\n              {post.tags.map((tag, j) => {\n                return (\n                  <div className={styles.tag} key={`${j}`}>{`#${tag}`}</div>\n                );\n              })}\n            </div>\n            <button\n              className={styles.likeButton}\n              onClick={() => likeHandler(post._id)}\n            >\n              <FontAwesomeIcon className={styles.heartIcon} icon={faHeart} />\n              {post.likes.length > 0 && (\n                <span className={styles.likeCount}>{post.likes.length}</span>\n              )}\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default PostList;\n","import React from 'react';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport PostList from '../components/postList/PostList';\n\nconst Home = () => {\n  return (\n    <Grid>\n      <Row>\n        <Col mdOffset={2} md={8} xs={12}>\n          <PostList />\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default Home;\n","import React, { FC, useRef } from 'react';\nimport styles from './Form.module.scss';\n\ninterface Props {\n  submitHandler?: () => void;\n  children: React.ReactNode;\n}\n\nconst Form: FC<Props> = ({ submitHandler, children }) => {\n  const form = useRef<HTMLFormElement>(null);\n\n  const resetForm = () => {\n    form.current!.reset();\n  };\n  return (\n    <form\n    autoComplete='off'\n      onSubmit={(e) => {\n        e.preventDefault();\n        if (submitHandler) {\n          submitHandler();\n        }\n        resetForm();\n      }}\n      ref={form}\n      className={styles.form}\n    >\n      {children}\n    </form>\n  );\n};\n\nexport default Form;\n","import React, { FC } from 'react';\nimport styles from './Input.module.scss';\n\ninterface Props {\n  id?: string;\n  type?: 'text' | 'email' | 'password';\n  required?: boolean;\n  value: string;\n  changeHandler: (value: string) => void;\n}\n\nconst Input: FC<Props> = ({\n  id = '',\n  type = 'text',\n  required = false,\n  value,\n  changeHandler,\n}) => {\n  return (\n    <input\n      onChange={(e) => changeHandler(e.target.value)}\n      value={value}\n      required={required}\n      id={id}\n      type={type}\n      className={styles.input}\n    ></input>\n  );\n};\n\nexport default Input;\n","import React, { FC } from 'react';\nimport styles from './Label.module.scss';\n\ninterface Props {\n  htmlFor: string;\n  content: string;\n}\n\nconst Label: FC<Props> = ({ htmlFor, content }) => {\n  return (\n    <label className={styles.label} htmlFor={htmlFor}>\n      {content}\n    </label>\n  );\n};\n\nexport default Label;\n","import axios from 'axios';\nimport React, { FC, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Button from '../button/Button';\nimport Form from '../form/Form';\nimport Input from '../input/Input';\nimport Label from '../label/Label';\nimport styles from './LoginForm.module.scss';\nimport { fetchUser } from '../../store/user/actions';\nimport { CurrentUser } from '../../store/user/types';\n\nconst LoginForm: FC = () => {\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loginDetails, setLoginDetails] = useState({\n    email: '',\n    password: '',\n  });\n\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  const loginHandler = async () => {\n    try {\n      const { data }: { data: CurrentUser } = await axios.post(\n        'http://localhost:5000/users/login',\n        loginDetails,\n      );\n\n      dispatch(fetchUser(data));\n      localStorage['x-auth-token'] = data.token;\n      setLoginDetails({\n        email: '',\n        password: '',\n      });\n\n      history.push('/');\n    } catch (error) {\n      setErrorMessage(error.response.data.message);\n      setTimeout(() => {\n        setErrorMessage('');\n      }, 4000);\n    }\n  };\n\n  return (\n    <Form submitHandler={loginHandler}>\n      <div className={styles.formContentWrapper}>\n        <h1>Welcome to Community</h1>\n        {errorMessage && <div className={styles.error}>{errorMessage}</div>}\n        <div className={styles.labelContentWrapper}>\n          <Label htmlFor=\"email\" content=\"Email\" />\n          <Input\n            changeHandler={(value) =>\n              setLoginDetails({ ...loginDetails, email: value })\n            }\n            value={loginDetails.email}\n            type=\"email\"\n            id=\"email\"\n            required\n          />\n        </div>\n\n        <div className={styles.labelContentWrapper}>\n          <Label htmlFor=\"password\" content=\"Password\" />\n          <Input\n            changeHandler={(value) =>\n              setLoginDetails({ ...loginDetails, password: value })\n            }\n            value={loginDetails.password}\n            type=\"password\"\n            id=\"password\"\n            required\n          />\n        </div>\n        <div className={styles.buttonWrapper}>\n          <Button type=\"submit\" label=\"Sign in\" />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport LoginForm from '../components/loginForm/LoginForm';\n\nconst Login = () => {\n  return <LoginForm />;\n};\n\nexport default Login;\n","import axios from 'axios';\nimport React, { FC, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { fetchUser } from '../../store/user/actions';\nimport { CurrentUser } from '../../store/user/types';\nimport Button from '../button/Button';\nimport Form from '../form/Form';\nimport Input from '../input/Input';\nimport Label from '../label/Label';\nimport styles from './RegisterForm.module.scss';\n\nconst RegisterForm: FC = () => {\n  const [loginDetails, setLoginDetails] = useState({\n    email: '',\n    password: '',\n    passwordCheck: '',\n  });\n\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  const registerHandler = async () => {\n    try {\n      await axios.post('http://localhost:5000/users/register', loginDetails);\n      const { email, password } = loginDetails;\n\n      const { data }: { data: CurrentUser } = await axios.post(\n        'http://localhost:5000/users/login',\n        {\n          email,\n          password,\n        },\n      );\n\n      dispatch(fetchUser(data));\n      localStorage['x-auth-token'] = data.token;\n      setLoginDetails({\n        email: '',\n        password: '',\n        passwordCheck: '',\n      });\n\n      history.push('/');\n    } catch (error) {\n      setErrorMessage(error.response.data.message);\n      setTimeout(() => {\n        setErrorMessage('');\n      }, 4000);\n    }\n  };\n\n  return (\n    <Form submitHandler={registerHandler}>\n      <div className={styles.formContentWrapper}>\n        <h1>Welcome to Community</h1>\n        {errorMessage && <div className={styles.error}>{errorMessage}</div>}\n        <div className={styles.labelContentWrapper}>\n          <Label htmlFor=\"email\" content=\"Email\" />\n          <Input\n            changeHandler={(value) =>\n              setLoginDetails({ ...loginDetails, email: value })\n            }\n            value={loginDetails.email}\n            type=\"email\"\n            id=\"email\"\n            required\n          />\n        </div>\n\n        <div className={styles.labelContentWrapper}>\n          <Label htmlFor=\"password\" content=\"Password\" />\n          <Input\n            changeHandler={(value) =>\n              setLoginDetails({ ...loginDetails, password: value })\n            }\n            value={loginDetails.password}\n            type=\"password\"\n            id=\"password\"\n            required\n          />\n        </div>\n        <div className={styles.labelContentWrapper}>\n          <Label htmlFor=\"passwordCheck\" content=\"Verify passwod\" />\n          <Input\n            changeHandler={(value) =>\n              setLoginDetails({ ...loginDetails, passwordCheck: value })\n            }\n            value={loginDetails.passwordCheck}\n            type=\"password\"\n            id=\"passwordCheck\"\n            required\n          />\n        </div>\n        <div className={styles.buttonWrapper}>\n          <Button type=\"submit\" label=\"Register\" />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nexport default RegisterForm;\n","import React from 'react';\nimport RegisterForm from '../components/registerForm/RegisterForm';\n\nconst Register = () => {\n  return <RegisterForm />;\n};\n\nexport default Register;\n","import React, { useEffect } from 'react';\nimport { Switch, Route, useLocation, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport Header from './components/header/Header';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport { fetchUser } from './store/user/actions';\n\nimport { fetchPostsAction } from './store/posts/actions';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchPostsAction(dispatch);\n  }, []);\n\n  const checkCurrentUser = async () => {\n    const path = location.pathname;\n    const authToken = localStorage['x-auth-token'] || '';\n    const header = {\n      headers: { 'x-auth-token': authToken },\n    };\n    const { data: tokenResponse } = await axios.post(\n      'https://dev-clone.herokuapp.com/users/tokenIsValid',\n      null,\n      header,\n    );\n\n    if (tokenResponse && (path === '/login' || path === '/register')) {\n      history.push('/');\n    }\n\n    // if token is valid > continue..\n    if (tokenResponse) {\n      const { data } = await axios.get('https://dev-clone.herokuapp.com/users', header);\n\n      dispatch(\n        fetchUser({\n          token: authToken,\n          user: data,\n        }),\n      );\n    }\n  };\n\n  useEffect(() => {\n    checkCurrentUser();\n  }, [location.pathname]);\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </>\n  );\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { userReducer } from './reducer';\n\nexport default userReducer;\n","/* eslint-disable no-underscore-dangle */\nimport { AllActions, Post, FETCH_POSTS, LIKE_POST } from './types';\n\nexport const initialStore: Post[] = [];\n\nexport const postReducer = (state = initialStore, action: AllActions) => {\n  switch (action.type) {\n    case FETCH_POSTS: {\n      return action.payload;\n    }\n    case LIKE_POST: {\n      const newState = state.map((post) => {\n        if (post._id === action.id && post.likes.includes(action.userId)) {\n          const newpost = {\n            ...post,\n            likes: post.likes.filter((id) => {\n              return id !== action.userId;\n            }),\n          };\n          return newpost;\n        }\n        if (post._id === action.id && !post.likes.includes(action.userId)) {\n          const newPost = { ...post, likes: [...post.likes, action.userId] };\n          return newPost;\n        }\n\n        return post;\n      });\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n","import { postReducer } from './reducer';\n\nexport default postReducer;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport posts from './posts';\n\nconst rootReducer = combineReducers({ user, posts });\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, HashRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport RootStore from './store';\n\nconst store = createStore(RootStore);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <HashRouter basename=\"/\">\n          <App />\n        </HashRouter>\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}